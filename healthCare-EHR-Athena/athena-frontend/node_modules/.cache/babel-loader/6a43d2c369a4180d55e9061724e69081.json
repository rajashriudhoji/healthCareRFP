{"ast":null,"code":"var _jsxFileName = \"/home/excellarate/HealthCare/healthCareRFP/healthCare-EHR-Athena/athena-frontend/src/components/PatientsInfo/Appointments/appointment.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport DataContext from \"../../../context/DataContext\";\nimport axios from \"axios\";\nimport PatientStepper from \"../../Patients_Stepper/Stepper\";\nimport \"../../patients-list/patientslist.css\";\nimport { Button, Table } from \"react-bootstrap\";\nimport PatientModal from \"../Modal/appointmentModal\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillHome } from \"react-icons/ai\";\nimport \"../patientInfo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Appointment = () => {\n  _s();\n\n  const {\n    patientId,\n    step,\n    appointments,\n    setAppointments,\n    insurance,\n    setApptId,\n    apptId,\n    patientName,\n    isExistingPatient,\n    isView\n  } = useContext(DataContext);\n  console.log(\"isExistingPatient\", isExistingPatient, isView);\n  const [show, setShow] = useState(false);\n  const [modalData, setModalData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const getAppointments = async () => {\n      try {\n        setLoading(true);\n        console.log(\"INSIDE getBalanceData\");\n        const {\n          data: details\n        } = await axios.get(`http://localhost:5000/getAppointments/${patientId}`);\n        setAppointments(details);\n      } catch (error) {} finally {\n        setLoading(false);\n      }\n    };\n\n    getAppointments();\n  }, []);\n\n  const handleClick = appointmentid => {\n    setApptId(appointmentid);\n    const updatedData = appointments.filter(item => item.appointmentid === appointmentid);\n    setModalData(updatedData);\n    setShow(true);\n  };\n\n  console.log(\"isExistingPatient\", isExistingPatient, isView);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isExistingPatient && !isView && /*#__PURE__*/_jsxDEV(PatientStepper, {\n      step: step\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 40\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border m-5\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isExistingPatient && isView && /*#__PURE__*/_jsxDEV(Link, {\n        to: step >= 1 ? \"/\" : \"\",\n        children: /*#__PURE__*/_jsxDEV(AiFillHome, {\n          color: \"#5A84C3\",\n          size: 30,\n          className: \"home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step-form container step-three mt-5`,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"apptList\",\n          children: [\"Appointments List for \", patientName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"align\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-secondary text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Patient Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Department Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Appointment Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"View details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-light text-dark\",\n            children: appointments.map((patient, index) => {\n              const {\n                appointmentid,\n                departmentid,\n                appointmenttype\n              } = patient || {};\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: patientName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: departmentid\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: appointmenttype\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => handleClick(appointmentid),\n                    className: \"viewBtn\",\n                    children: \"View Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), show && /*#__PURE__*/_jsxDEV(PatientModal, {\n      show: show,\n      setShow: setShow,\n      appointments: appointments,\n      modalData: modalData,\n      insurance: insurance,\n      apptId: apptId,\n      patientName: patientName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Appointment, \"FLhJGI1/FjtBgo7mnhFv2HdBVHY=\");\n\n_c = Appointment;\nexport default Appointment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"names":["useContext","useEffect","useState","DataContext","axios","PatientStepper","Button","Table","PatientModal","Link","AiFillHome","Appointment","patientId","step","appointments","setAppointments","insurance","setApptId","apptId","patientName","isExistingPatient","isView","console","log","show","setShow","modalData","setModalData","loading","setLoading","getAppointments","data","details","get","error","handleClick","appointmentid","updatedData","filter","item","map","patient","index","departmentid","appointmenttype"],"sources":["/home/excellarate/HealthCare/healthCareRFP/healthCare-EHR-Athena/athena-frontend/src/components/PatientsInfo/Appointments/appointment.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport DataContext from \"../../../context/DataContext\";\nimport axios from \"axios\";\nimport PatientStepper from \"../../Patients_Stepper/Stepper\";\nimport \"../../patients-list/patientslist.css\";\nimport { Button, Table } from \"react-bootstrap\";\nimport PatientModal from \"../Modal/appointmentModal\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillHome } from \"react-icons/ai\";\nimport \"../patientInfo.css\";\nconst Appointment = () => {\n  const {\n    patientId,\n    step,\n    appointments,\n    setAppointments,\n    insurance,\n    setApptId,\n    apptId,\n    patientName,\n    isExistingPatient,\n    isView,\n  } = useContext(DataContext);\n\n  console.log(\"isExistingPatient\", isExistingPatient, isView);\n\n  const [show, setShow] = useState(false);\n  const [modalData, setModalData] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getAppointments = async () => {\n      try {\n        setLoading(true);\n        console.log(\"INSIDE getBalanceData\");\n        const { data: details } = await axios.get(\n          `http://localhost:5000/getAppointments/${patientId}`\n        );\n        setAppointments(details);\n      } catch (error) {\n      } finally {\n        setLoading(false);\n      }\n    };\n    getAppointments();\n  }, []);\n\n  const handleClick = (appointmentid) => {\n    setApptId(appointmentid);\n    const updatedData = appointments.filter(\n      (item) => item.appointmentid === appointmentid\n    );\n    setModalData(updatedData);\n    setShow(true);\n  };\n\n  console.log(\"isExistingPatient\", isExistingPatient, isView);\n  return (\n    <>\n      {isExistingPatient && !isView && <PatientStepper step={step} />}\n      {loading ? (\n        <div class=\"d-flex justify-content-center\">\n          <div className=\"spinner-border m-5\" role=\"status\">\n            <span className=\"sr-only\"></span>\n          </div>\n        </div>\n      ) : (\n        <>\n          {isExistingPatient && isView && (\n            <Link to={step >= 1 ? \"/\" : \"\"}>\n              <AiFillHome color=\"#5A84C3\" size={30} className=\"home\" />\n            </Link>\n          )}\n          <div className={`step-form container step-three mt-5`}>\n            <h5 className=\"apptList\">Appointments List for {patientName}</h5>\n            <Table className=\"align\">\n              <thead className=\"bg-secondary text-white\">\n                <tr>\n                  <th>Patient Name</th>\n                  <th>Department Name</th>\n                  <th>Appointment Type</th>\n                  <th>View details</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-light text-dark\">\n                {appointments.map((patient, index) => {\n                  const { appointmentid, departmentid, appointmenttype } =\n                    patient || {};\n\n                  return (\n                    <tr key={index}>\n                      <td>{patientName}</td>\n                      <td>{departmentid}</td>\n                      <td>{appointmenttype}</td>\n                      <td>\n                        <Button\n                          onClick={() => handleClick(appointmentid)}\n                          className=\"viewBtn\"\n                        >\n                          View Details\n                        </Button>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </div>\n        </>\n      )}\n      {show && (\n        <PatientModal\n          show={show}\n          setShow={setShow}\n          appointments={appointments}\n          modalData={modalData}\n          insurance={insurance}\n          apptId={apptId}\n          patientName={patientName}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Appointment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}