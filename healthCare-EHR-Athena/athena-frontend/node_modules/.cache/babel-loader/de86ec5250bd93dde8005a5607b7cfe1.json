{"ast":null,"code":"var _jsxFileName = \"/home/excellarate/HealthCare/healthCareRFP/healthCare-EHR-Athena/athena-frontend/src/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter, Navigate, Route, Routes } from \"react-router-dom\";\nimport StepOne from \"./components/assessment-form/step-one/StepOne\";\nimport StepTwo from \"./components/assessment-form/step-two/StepTwo\";\nimport Home from \"./components/home/Home\";\nimport Appointment from \"./components/PatientsInfo/Appointments/appointment\";\nimport BasicInfo from \"./components/PatientsInfo/BasicInfo/BasicInfo\";\nimport DataContext from \"./context/DataContext\";\nimport { BASE_API_URL } from \"./utils/constants\";\nimport { initialState } from \"./utils/initialstate\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppWrapper = () => {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AppRoutes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AppWrapper;\n\nconst AppRoutes = () => {\n  _s();\n\n  const [data, setData] = useState(initialState);\n  const [step, setStep] = useState(1);\n  const [isReadOnly, setIsReadOnly] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [patientId, setPatientId] = useState(\"\");\n  const [filteredData, setFilteredData] = useState([]);\n  const [balance, setBalance] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const [insurance, setInsurance] = useState([]);\n  const [apptId, setApptId] = useState();\n  const [deptId, setDeptId] = useState();\n  const [patientIdForAppt, setpatientIdforAppt] = useState();\n  const [departments, setDepartments] = useState([]);\n  const [patientName, setPatientName] = useState(\"\");\n  const [showTable, setShowTable] = useState(false);\n  const [appointmentId, setAppointmentId] = useState();\n  const [openAppt, setOpenAppt] = useState([]);\n  const [isExistingPatient, setIsExistingPatient] = useState(false);\n  const [isView, setIsView] = useState(false);\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      setPatientName,\n      patientName,\n      data,\n      setData,\n      step,\n      setStep,\n      isReadOnly,\n      setIsReadOnly,\n      setIsEdit,\n      isEdit,\n      patientId,\n      setPatientId,\n      setFilteredData,\n      filteredData,\n      setBalance,\n      balance,\n      appointments,\n      setAppointments,\n      insurance,\n      setInsurance,\n      setApptId,\n      apptId,\n      setShowTable,\n      showTable,\n      departments,\n      setDepartments,\n      deptId,\n      setDeptId,\n      patientIdForAppt,\n      setpatientIdforAppt,\n      appointmentId,\n      setAppointmentId,\n      openAppt,\n      setOpenAppt,\n      isExistingPatient,\n      setIsExistingPatient,\n      isView,\n      setIsView\n    },\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/step-one\",\n        element: /*#__PURE__*/_jsxDEV(StepOne, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/step-two\",\n        element: /*#__PURE__*/_jsxDEV(StepTwo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/basicInfo\",\n        element: /*#__PURE__*/_jsxDEV(BasicInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/appointments\",\n        element: /*#__PURE__*/_jsxDEV(Appointment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppRoutes, \"HdLKm/Uc6O41dBeQyi6K4yDr4s0=\");\n\n_c2 = AppRoutes;\nReactDOM.render( /*#__PURE__*/_jsxDEV(AppWrapper, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 100,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppWrapper\");\n$RefreshReg$(_c2, \"AppRoutes\");","map":{"version":3,"names":["useState","ReactDOM","axios","BrowserRouter","Navigate","Route","Routes","StepOne","StepTwo","Home","Appointment","BasicInfo","DataContext","BASE_API_URL","initialState","AppWrapper","AppRoutes","data","setData","step","setStep","isReadOnly","setIsReadOnly","isEdit","setIsEdit","patientId","setPatientId","filteredData","setFilteredData","balance","setBalance","appointments","setAppointments","insurance","setInsurance","apptId","setApptId","deptId","setDeptId","patientIdForAppt","setpatientIdforAppt","departments","setDepartments","patientName","setPatientName","showTable","setShowTable","appointmentId","setAppointmentId","openAppt","setOpenAppt","isExistingPatient","setIsExistingPatient","isView","setIsView","render","document","getElementById"],"sources":["/home/excellarate/HealthCare/healthCareRFP/healthCare-EHR-Athena/athena-frontend/src/index.js"],"sourcesContent":["import { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter, Navigate, Route, Routes } from \"react-router-dom\";\nimport StepOne from \"./components/assessment-form/step-one/StepOne\";\nimport StepTwo from \"./components/assessment-form/step-two/StepTwo\";\nimport Home from \"./components/home/Home\";\nimport Appointment from \"./components/PatientsInfo/Appointments/appointment\";\nimport BasicInfo from \"./components/PatientsInfo/BasicInfo/BasicInfo\";\nimport DataContext from \"./context/DataContext\";\nimport { BASE_API_URL } from \"./utils/constants\";\nimport { initialState } from \"./utils/initialstate\";\nimport \"./index.css\";\n\nconst AppWrapper = () => {\n  return (\n    <BrowserRouter>\n      <AppRoutes />\n    </BrowserRouter>\n  );\n};\n\nconst AppRoutes = () => {\n  const [data, setData] = useState(initialState);\n  const [step, setStep] = useState(1);\n  const [isReadOnly, setIsReadOnly] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n  const [patientId, setPatientId] = useState(\"\");\n  const [filteredData, setFilteredData] = useState([]);\n  const [balance, setBalance] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const [insurance, setInsurance] = useState([]);\n  const [apptId, setApptId] = useState();\n  const [deptId, setDeptId] = useState();\n  const [patientIdForAppt, setpatientIdforAppt] = useState();\n  const [departments, setDepartments] = useState([]);\n  const [patientName, setPatientName] = useState(\"\");\n  const [showTable, setShowTable] = useState(false);\n  const [appointmentId, setAppointmentId] = useState();\n  const [openAppt, setOpenAppt] = useState([]);\n  const [isExistingPatient, setIsExistingPatient] = useState(false);\n  const [isView, setIsView] = useState(false);\n\n  return (\n    <DataContext.Provider\n      value={{\n        setPatientName,\n        patientName,\n        data,\n        setData,\n        step,\n        setStep,\n        isReadOnly,\n        setIsReadOnly,\n        setIsEdit,\n        isEdit,\n        patientId,\n        setPatientId,\n        setFilteredData,\n        filteredData,\n        setBalance,\n        balance,\n        appointments,\n        setAppointments,\n        insurance,\n        setInsurance,\n        setApptId,\n        apptId,\n        setShowTable,\n        showTable,\n        departments,\n        setDepartments,\n        deptId,\n        setDeptId,\n        patientIdForAppt,\n        setpatientIdforAppt,\n        appointmentId,\n        setAppointmentId,\n        openAppt,\n        setOpenAppt,\n        isExistingPatient,\n        setIsExistingPatient,\n        isView,\n        setIsView,\n      }}\n    >\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/step-one\" element={<StepOne />} />\n        <Route path=\"/step-two\" element={<StepTwo />} />\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\n        <Route path=\"/basicInfo\" element={<BasicInfo />} />\n        <Route path=\"/appointments\" element={<Appointment />} />\n      </Routes>\n    </DataContext.Provider>\n  );\n};\n\nReactDOM.render(<AppWrapper />, document.getElementById(\"root\"));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}